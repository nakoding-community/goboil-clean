// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthLoginResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AuthRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthRegisterResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/samples": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Get samples",
                "parameters": [
                    {
                        "types": "string",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "name": "created_by",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "name": "modified_at",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "name": "modified_by",
                        "in": "query"
                    },
                    {
                        "types": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "types": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "types": "string",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleGetResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Create samples",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SampleCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleCreateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/samples/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Delete samples",
                "parameters": [
                    {
                        "types": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleDeleteResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update samples",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Update samples",
                "parameters": [
                    {
                        "types": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SampleUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleUpdateResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        },
        "/samples/{id}/{child}/{child_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get samples by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Get samples by id",
                "parameters": [
                    {
                        "types": "integer",
                        "description": "id path",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SampleGetByIDResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "abstraction.PaginationInfo": {
            "types": "object",
            "properties": {
                "count": {
                    "types": "integer"
                },
                "more_records": {
                    "types": "boolean"
                },
                "page": {
                    "types": "integer"
                },
                "page_size": {
                    "types": "integer"
                },
                "sort": {
                    "types": "string"
                },
                "sort_by": {
                    "types": "string"
                }
            }
        },
        "dto.AuthLoginRequest": {
            "types": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "types": "string"
                },
                "password": {
                    "types": "string"
                }
            }
        },
        "dto.AuthLoginResponse": {
            "types": "object",
            "required": [
                "email",
                "is_active",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "email": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "is_active": {
                    "types": "boolean"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "name": {
                    "types": "string"
                },
                "password": {
                    "types": "string"
                },
                "phone": {
                    "types": "string"
                },
                "token": {
                    "types": "string"
                }
            }
        },
        "dto.AuthLoginResponseDoc": {
            "types": "object",
            "properties": {
                "body": {
                    "types": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AuthLoginResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.AuthRegisterRequest": {
            "types": "object",
            "required": [
                "email",
                "is_active",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "email": {
                    "types": "string"
                },
                "is_active": {
                    "types": "boolean"
                },
                "name": {
                    "types": "string"
                },
                "password": {
                    "types": "string"
                },
                "phone": {
                    "types": "string"
                }
            }
        },
        "dto.AuthRegisterResponse": {
            "types": "object",
            "required": [
                "email",
                "is_active",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "email": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "is_active": {
                    "types": "boolean"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "name": {
                    "types": "string"
                },
                "password": {
                    "types": "string"
                },
                "phone": {
                    "types": "string"
                }
            }
        },
        "dto.AuthRegisterResponseDoc": {
            "types": "object",
            "properties": {
                "body": {
                    "types": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.AuthRegisterResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleCreateRequest": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "types": "string"
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "dto.SampleCreateResponse": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "sample_childs": {
                    "description": "relations",
                    "types": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "dto.SampleCreateResponseDoc": {
            "types": "object",
            "properties": {
                "body": {
                    "types": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleCreateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleDeleteResponse": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "sample_childs": {
                    "description": "relations",
                    "types": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "dto.SampleDeleteResponseDoc": {
            "types": "object",
            "properties": {
                "body": {
                    "types": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleDeleteResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleGetByIDResponse": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "sample_childs": {
                    "description": "relations",
                    "types": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "dto.SampleGetByIDResponseDoc": {
            "types": "object",
            "properties": {
                "body": {
                    "types": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleGetByIDResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleGetResponseDoc": {
            "types": "object",
            "properties": {
                "body": {
                    "types": "object",
                    "properties": {
                        "data": {
                            "types": "array",
                            "items": {
                                "$ref": "#/definitions/model.SampleEntityModel"
                            }
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "dto.SampleUpdateRequest": {
            "types": "object",
            "required": [
                "id",
                "key",
                "value"
            ],
            "properties": {
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "dto.SampleUpdateResponse": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "sample_childs": {
                    "description": "relations",
                    "types": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "dto.SampleUpdateResponseDoc": {
            "types": "object",
            "properties": {
                "body": {
                    "types": "object",
                    "properties": {
                        "data": {
                            "$ref": "#/definitions/dto.SampleUpdateResponse"
                        },
                        "meta": {
                            "$ref": "#/definitions/response.Meta"
                        }
                    }
                }
            }
        },
        "model.SampleChildEntityModel": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "sample_grand_childs": {
                    "types": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleGrandChildEntityModel"
                    }
                },
                "sample_id": {
                    "description": "relations",
                    "types": "integer"
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "model.SampleEntityModel": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "sample_childs": {
                    "description": "relations",
                    "types": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleChildEntityModel"
                    }
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "model.SampleGrandChildEntityModel": {
            "types": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "created_at": {
                    "types": "string"
                },
                "created_by": {
                    "types": "string"
                },
                "id": {
                    "types": "integer"
                },
                "key": {
                    "types": "string"
                },
                "modified_at": {
                    "types": "string"
                },
                "modified_by": {
                    "types": "string"
                },
                "sample_child_id": {
                    "description": "relations",
                    "types": "integer"
                },
                "value": {
                    "types": "string"
                }
            }
        },
        "response.Meta": {
            "types": "object",
            "properties": {
                "info": {
                    "$ref": "#/definitions/abstraction.PaginationInfo"
                },
                "message": {
                    "types": "string",
                    "default": "true"
                },
                "success": {
                    "types": "boolean",
                    "default": true
                }
            }
        },
        "response.errorResponse": {
            "types": "object",
            "properties": {
                "error": {
                    "types": "string"
                },
                "meta": {
                    "$ref": "#/definitions/response.Meta"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "types": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.0.1",
	Host:        "localhost:3030",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "codeid-boiler",
	Description: "This is a doc for codeid-boiler.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
